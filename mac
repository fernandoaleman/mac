#!/bin/sh
# ft=shell

# shellcheck disable=SC3043

fancy_echo() {
  local fmt="$1"; shift

  # shellcheck disable=SC2059
  printf "\\n$fmt\\n" "$@"
}

append_to_fish_config() {
  local text="$1" fish_config
  local skip_new_line="${2:-0}"

  if [ -w "$HOME/.config/fish/config.fish.local" ]; then
    fish_config="$HOME/.config/fish/config.fish.local"
  else
    fish_config="$HOME/.config/fish/config.fish"
  fi

  if ! grep -Fqs "$text" "$fish_config"; then
    if [ "$skip_new_line" -eq 1 ]; then
      printf "%s\\n" "$text" >> "$fish_config"
    else
      printf "\\n%s\\n" "$text" >> "$fish_config"
    fi
  fi
}

# shellcheck disable=SC2154
trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT

set -e

if [ ! -d "$HOME/.config/fish" ]; then
  mkdir -p "$HOME/.config/fish"
fi

if [ ! -f "$HOME/.config/fish/config.fish" ]; then
  touch "$HOME/.config/fish/config.fish"
fi

if [ ! -d "$HOME/.config/bin/" ]; then
  mkdir "$HOME/.config/bin"
fi

# shellcheck disable=SC2016
append_to_fish_config 'fish_add_path $HOME/.config/bin'

arch="$(uname -m)"

if [ "$arch" = "arm64" ]; then
  if ! pkgutil --pkg-info=com.apple.pkg.RosettaUpdateAuto > /dev/null 2>&1; then
    fancy_echo "Installing Rosetta ..."
    softwareupdate --install-rosetta --agree-to-license
  fi
fi

if [ "$arch" = "arm64" ]; then
  HOMEBREW_PREFIX="/opt/homebrew"
else
  HOMEBREW_PREFIX="/usr/local"
fi

if ! command -v brew >/dev/null; then
  fancy_echo "Installing Homebrew ..."
  /bin/bash -c \
    "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

  # shellcheck disable=SC2016
  append_to_fish_config "eval ($HOMEBREW_PREFIX/bin/brew shellenv)"

  export PATH="$HOMEBREW_PREFIX/bin:$PATH"
fi

brew analytics off

brew bundle --no-lock --file=- <<EOF
tap "arl/arl"
tap "homebrew/cask-fonts"

# Fonts
cask "font-jetbrains-mono-nerd-font"

# Unix
brew "bash"
brew "curl"
brew "fd"
brew "fish"
brew "fzf"
brew "git"
brew "gitmux"
brew "lazygit"
brew "lf"
brew "nvim"
brew "openssl"
brew "rcm"
brew "reattach-to-user-namespace"
brew "ripgrep"
brew "starship"
brew "tmux"
brew "wget"
brew "zoxide"

# GitHub
brew "gh"

# Programming language prerequisites and package managers
brew "coreutils"
brew "libyaml" # should come after openssl
brew "readline"
brew "yarn"
brew "zlib"

# Databases
brew "mysql-client@5.7", link: true
brew "libpq", link: true

# Mac apps
cask "alacritty"
EOF
